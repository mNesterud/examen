@model Examen.Models.LoginUserModel

@{
    ViewBag.Title = "Login";
}

<section class="non_cluttered_bg">
    <h2>Logga in</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">Användarnamn</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Lösenord</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pass, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.Pass, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Logga in", "Questionnaire", "Questionnaire", null, new { @id = "login_btn" })
                    @Html.ActionLink("Avbryt", null, null, new { @id = "cancel_btn"})
                </div>
            </div>
        </div>
    }
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(startTime());

    function addClickEvent() {
        var loginBtn = document.getElementById("login_btn");

        loginBtn.addEventListener("click", function () {
            sendTime("loginclick")
        });

    }
    addClickEvent();
</script>
